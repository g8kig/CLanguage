name: Build Nugets

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: macos-15

    steps:
    - uses: actions/checkout@v4

    - name: Set Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: "16.3"
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - name: Update Versions
      env:
        VERSION_PREFIX: '0.21'
        VERSION_SUFFIX: ${{github.run_number}}
      run: |
        VERSION=$VERSION_PREFIX.$VERSION_SUFFIX
        sed -i bak "s:<Version>1.0.0</Version>:<Version>$VERSION</Version>:g" CLanguage/CLanguage.csproj
        sed -i bak "s:<Version>1.0.0</Version>:<Version>$VERSION</Version>:g" Editor/CLanguage.Editor.csproj

    - name: Install Workloads
      run: dotnet workload restore CLanguage.sln
    - name: Restore Packages
      run: dotnet restore CLanguage.sln

    - name: Build
      run: dotnet build -c Release CLanguage/CLanguage.csproj
    - name: Test
      run: dotnet test -c Release CLanguageTests/CLanguageTests.csproj
    - name: Build Mac Editor
      run: dotnet build -c Release Editor/Mac/CLanguage.Editor.Mac.csproj
    - name: Build iOS Editor
      run: dotnet build -c Release Editor/iOS/CLanguage.Editor.iOS.csproj

    - name: Package Library
      if: github.event_name == 'push'
      run: |
        mkdir PackageOut
        cd CLanguage && dotnet pack --include-symbols --no-build -c Release -v normal -o ../PackageOut
    - name: Package Editor
      if: true || github.event_name == 'push'
      run: |
        cd Editor && dotnet pack --include-symbols --no-build -c Release -v normal -o ../PackageOut
    - name: Package
      if: github.event_name == 'push'
      uses: actions/upload-artifact@master
      with:
        path: PackageOut
